version: "3.7"
services:

  nginx:
    restart: always
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
      args:
        - ENV_TYPE=${ENV_TYPE:-development}
    ports:
      - "80:80"
      - "443:443"
    environment:
      - APP_DOMAIN=${APP_DOMAIN:-testshop}
      - SERVER_IP=${SERVER_IP:-127.0.0.1}
    extra_hosts:
      - "frontend.server:${FRONTEND_SERVER_IP:-host.docker.internal}"
    volumes:
      - .:/var/www/html/
    command: ./src/run_nginx.sh
    depends_on:
      - php-fpm
    networks:
      - shop_network

  php-fpm:
    build:
      context: .
      dockerfile: docker/php-fpm/Dockerfile
      args:
        - ENV_TYPE=${ENV_TYPE:-development}
        - DOCKER_USER_ID=${DOCKER_USER_ID}
        - DOCKER_GROUP_ID=${DOCKER_GROUP_ID}
        - SERVER_IP=${SERVER_IP}
    restart: always
    volumes:
      - .:/var/www/html/
    depends_on:
      - postgres
      - redis
    networks:
      - shop_network

  postgres:
    image: postgres:14
    restart: always
    shm_size: '4gb'
    volumes:
      - ./database/data:/var/lib/postgresql/data
    ports:
      - 127.0.0.1:5432:5432
      - ${POSTGRE_IP}:5432:5432
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
    networks:
      - shop_network

  redis:
    restart: always
    build:
      context: .
      dockerfile: docker/redis/Dockerfile
    networks:
      - shop_network

networks:
  shop_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet:  172.27.0.1/24
